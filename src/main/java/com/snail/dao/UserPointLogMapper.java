package com.snail.dao;

import com.snail.pojo.domain.UserPointLog;
import com.snail.pojo.domain.UserPointLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserPointLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int countByExample(UserPointLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int deleteByExample(UserPointLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `user_point_log`",
        "where `point_log_id` = #{pointLogId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer pointLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `user_point_log` (`point_log_id`, `user_id`, ",
        "`source`, `trans_serial`, ",
        "`change_pint`, `create_time`, ",
        "`update_time`, `app`)",
        "values (#{pointLogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{source,jdbcType=TINYINT}, #{transSerial,jdbcType=INTEGER}, ",
        "#{changePint,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{app,jdbcType=VARCHAR})"
    })
    int insert(UserPointLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int insertSelective(UserPointLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    List<UserPointLog> selectByExample(UserPointLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`point_log_id`, `user_id`, `source`, `trans_serial`, `change_pint`, `create_time`, ",
        "`update_time`, `app`",
        "from `user_point_log`",
        "where `point_log_id` = #{pointLogId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    UserPointLog selectByPrimaryKey(Integer pointLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") UserPointLog record, @Param("example") UserPointLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") UserPointLog record, @Param("example") UserPointLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserPointLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_log
     *
     * @mbggenerated
     */
    @Update({
        "update `user_point_log`",
        "set `user_id` = #{userId,jdbcType=INTEGER},",
          "`source` = #{source,jdbcType=TINYINT},",
          "`trans_serial` = #{transSerial,jdbcType=INTEGER},",
          "`change_pint` = #{changePint,jdbcType=SMALLINT},",
          "`create_time` = #{createTime,jdbcType=TIMESTAMP},",
          "`update_time` = #{updateTime,jdbcType=TIMESTAMP},",
          "`app` = #{app,jdbcType=VARCHAR}",
        "where `point_log_id` = #{pointLogId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserPointLog record);
}