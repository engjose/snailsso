package com.snail.dao;

import com.snail.pojo.domain.UserLogin;
import com.snail.pojo.domain.UserLoginExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserLoginMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int countByExample(UserLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int deleteByExample(UserLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `user_login`",
        "where `login_id` = #{loginId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer loginId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `user_login` (`login_id`, `user_id`, ",
        "`login_name`, `password`, ",
        "`user_status`, `create_time`, ",
        "`update_time`)",
        "values (#{loginId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{loginName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, ",
        "#{userStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(UserLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int insertSelective(UserLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    List<UserLogin> selectByExample(UserLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`login_id`, `user_id`, `login_name`, `password`, `user_status`, `create_time`, ",
        "`update_time`",
        "from `user_login`",
        "where `login_id` = #{loginId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    UserLogin selectByPrimaryKey(Integer loginId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") UserLogin record, @Param("example") UserLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") UserLogin record, @Param("example") UserLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login
     *
     * @mbggenerated
     */
    @Update({
        "update `user_login`",
        "set `user_id` = #{userId,jdbcType=INTEGER},",
          "`login_name` = #{loginName,jdbcType=VARCHAR},",
          "`password` = #{password,jdbcType=CHAR},",
          "`user_status` = #{userStatus,jdbcType=TINYINT},",
          "`create_time` = #{createTime,jdbcType=TIMESTAMP},",
          "`update_time` = #{updateTime,jdbcType=TIMESTAMP}",
        "where `login_id` = #{loginId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserLogin record);
}