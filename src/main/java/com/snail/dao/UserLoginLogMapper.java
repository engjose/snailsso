package com.snail.dao;

import com.snail.pojo.domain.UserLoginLog;
import com.snail.pojo.domain.UserLoginLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserLoginLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int countByExample(UserLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int deleteByExample(UserLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `user_login_log`",
        "where `login_log_id` = #{loginLogId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer loginLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `user_login_log` (`login_log_id`, `login_id`, ",
        "`login_time`, `login_ip`, ",
        "`login_type`, `login_result`, ",
        "`token`)",
        "values (#{loginLogId,jdbcType=INTEGER}, #{loginId,jdbcType=INTEGER}, ",
        "#{loginTime,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR}, ",
        "#{loginType,jdbcType=VARCHAR}, #{loginResult,jdbcType=VARCHAR}, ",
        "#{token,jdbcType=VARCHAR})"
    })
    int insert(UserLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int insertSelective(UserLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    List<UserLoginLog> selectByExample(UserLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`login_log_id`, `login_id`, `login_time`, `login_ip`, `login_type`, `login_result`, ",
        "`token`",
        "from `user_login_log`",
        "where `login_log_id` = #{loginLogId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    UserLoginLog selectByPrimaryKey(Integer loginLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") UserLoginLog record, @Param("example") UserLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") UserLoginLog record, @Param("example") UserLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_log
     *
     * @mbggenerated
     */
    @Update({
        "update `user_login_log`",
        "set `login_id` = #{loginId,jdbcType=INTEGER},",
          "`login_time` = #{loginTime,jdbcType=TIMESTAMP},",
          "`login_ip` = #{loginIp,jdbcType=VARCHAR},",
          "`login_type` = #{loginType,jdbcType=VARCHAR},",
          "`login_result` = #{loginResult,jdbcType=VARCHAR},",
          "`token` = #{token,jdbcType=VARCHAR}",
        "where `login_log_id` = #{loginLogId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserLoginLog record);
}